README
       Этот код представляет собой простое приложение блокнота, написанное на Python с использованием
        библиотек PyQt6 и SpeechRecognition. Вот краткое описание функциональности приложения:

1. Пользователь может создавать заметки, вводя текст в текстовые поля и сохраняя их,
 нажимая на кнопку "Сохранить запись".
2. Пользователь может добавлять заметки с помощью голосового ввода, нажимая на кнопку "Голосовой ввод".
 Распознанный текст будет автоматически добавлен как заметка.
3. Пользователь может изменять цвет текста в заметках, нажимая на кнопку "Изменить цвет текста" 
и выбирая цвет из диалогового окна.
4. Пользователь может сохранить все заметки в файл, нажимая на кнопку "Сохранить записи в файл" и
 выбирая место сохранения и формат файла.

Код создает графический интерфейс с помощью PyQt6, 
обеспечивает функциональность добавления, сохранения и изменения заметок, 
а также поддерживает голосовой ввод для создания заметок. Приложение позволяет удобно организовывать 
и хранить заметки пользователя.
____________________________
Библиотеки:

PyQt6.QtWidgets, 
QApplication,
QWidget, 
QVBoxLayout, 
QHBoxLayout, 
QPushButton, 
QTextEdit, 
QComboBox



                       !ПОЯСНЕНИЕ СТРОК КОДА!
1. import sys: Импорт модуля sys, который предоставляет доступ к некоторым переменным и функциям, взаимодействующим с интерпретатором Python.
2. from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QPushButton, QTextEdit, QColorDialog, QMessageBox, QFileDialog:
 Импорт необходимых классов и виджетов из библиотеки PyQt6 для создания графического интерфейса.
3. import speech_recognition as sr: Импорт модуля speech_recognition для распознавания речи.

Далее идет определение класса NotepadApp, который наследуется от класса QWidget и содержит методы и атрибуты для работы с приложением блокнота.

4. def __init__(self): Конструктор класса NotepadApp, инициализирующий список заметок и вызывающий метод initUI() для создания пользовательского интерфейса.
5. def initUI(self): Метод для создания пользовательского интерфейса с помощью различных виджетов и кнопок.
6. def add_note(self): Метод для добавления новой заметки в интерфейсе при нажатии на кнопку "+".
7. def save_note(self, note_input): Метод для сохранения текста заметки в список заметок.
8. def save_notes(self): Метод для сохранения всех заметок в файл.
9. def voice_input(self): Метод для обработки голосового ввода с помощью библиотеки SpeechRecognition.
10. def add_voice_note_to_ui(self, text): Метод для добавления заметки, распознанной из речи, в интерфейс.
11. def change_text_color(self): Метод для изменения цвета текста в заметках.

Последние строки кода запускают приложение и отображают его главное окно.

12. if __name__ == '__main__': Блок кода, который выполняется только при запуске файла напрямую, а не при импорте.
13. app = QApplication(sys.argv): Создание экземпляра приложения PyQt6.
14. notepad_app = NotepadApp(): Создание экземпляра класса NotepadApp.
15. notepad_app.show(): Отображение главного окна приложения.
16. sys.exit(app.exec()): Запуск главного цикла приложения PyQt6 для обработки событий пользовательского интерфейса.


                                 Обновление приложения 14.03.2024
1. Изменён интерфейс на Pyside6,
2. Добавлена возможность голосового ввода текста.